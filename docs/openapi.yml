openapi: '3.0.3'
info:
  title: API Mirach Community
  version: 0.0.0
  description: |
    This is the API documentation for the Mirach Community project.
    It provides endpoints for managing community-related data and operations.
  contact:
    name: Mirach Community Support
    email: support@mirachcommunity.org
    url: https://mirachcommunity.org/support

servers:
  - url: https://api-mirachcommunity.vercel.app/v1
    description: Staging server
  - url: https://api.mirachcommunity.org/v2
    description: Production server

tags:
  - name: Authentication
    description: Endpoints for user authentication and management
    
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User Login
      description: Authenticate a user and return an access token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized - Invalid credentials

  /auth/register:
    post:
      tags:
        - Authentication
      summary: User Registration
      description: Register a new user and return a success response.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '400':
          description: Bad Request - Validation error

  /auth/google:
    get:
      tags:
        - Authentication
      summary: Google OAuth Login
      description: Redirect to Google OAuth for user authentication.
      responses:
        '302':
          description: Redirect to Google OAuth URL
          headers:
            Location:
              description: URL to redirect to for Google OAuth
              schema:
                type: string

components:
  schemas:
    # === Base Response ===
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    # === Request Schemas ===
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - name
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        name:
          type: string

    # === Data Object Schema ===
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    # === Response Schemas ===
    LoginResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/User'
            token:
              type: string

    RegisterResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/User'